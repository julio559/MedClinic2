{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { Platform } from 'expo-modules-core';\nexport default {\n  getDocumentAsync: function () {\n    var _getDocumentAsync = _asyncToGenerator(function* (_ref) {\n      var _ref$type = _ref.type,\n        type = _ref$type === void 0 ? '*/*' : _ref$type,\n        _ref$multiple = _ref.multiple,\n        multiple = _ref$multiple === void 0 ? false : _ref$multiple,\n        _ref$base = _ref.base64,\n        base64 = _ref$base === void 0 ? true : _ref$base;\n      if (!Platform.isDOMAvailable) {\n        return {\n          canceled: true,\n          assets: null\n        };\n      }\n      var input = document.createElement('input');\n      input.style.display = 'none';\n      input.setAttribute('type', 'file');\n      input.setAttribute('accept', Array.isArray(type) ? type.join(',') : type);\n      input.setAttribute('id', String(Math.random()));\n      if (multiple) {\n        input.setAttribute('multiple', 'multiple');\n      }\n      document.body.appendChild(input);\n      return new Promise(function (resolve, reject) {\n        input.addEventListener('change', _asyncToGenerator(function* () {\n          if (input.files) {\n            var results = [];\n            for (var i = 0; i < input.files.length; i++) {\n              results.push(readFileAsync(input.files[i], base64));\n            }\n            try {\n              var assets = yield Promise.all(results);\n              resolve({\n                canceled: false,\n                assets: assets,\n                output: input.files\n              });\n            } catch (e) {\n              reject(e);\n            }\n          } else {\n            resolve({\n              canceled: true,\n              assets: null\n            });\n          }\n          document.body.removeChild(input);\n        }));\n        input.addEventListener('cancel', function () {\n          resolve({\n            canceled: true,\n            assets: null\n          });\n        });\n        var event = new MouseEvent('click');\n        input.dispatchEvent(event);\n      });\n    });\n    function getDocumentAsync(_x) {\n      return _getDocumentAsync.apply(this, arguments);\n    }\n    return getDocumentAsync;\n  }()\n};\nfunction readFileAsync(targetFile) {\n  var base64 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return new Promise(function (resolve, reject) {\n    var mimeType = targetFile.type;\n    if (!base64) {\n      resolve({\n        uri: targetFile.webkitRelativePath,\n        mimeType: mimeType,\n        name: targetFile.name,\n        lastModified: targetFile.lastModified,\n        size: targetFile.size,\n        file: targetFile\n      });\n      return;\n    }\n    var reader = new FileReader();\n    reader.onerror = function () {\n      reject(new Error(`Failed to read the selected media because the operation failed.`));\n    };\n    reader.onload = function (_ref3) {\n      var target = _ref3.target;\n      var uri = target.result;\n      resolve({\n        uri: uri,\n        mimeType: mimeType,\n        name: targetFile.name,\n        lastModified: targetFile.lastModified,\n        size: targetFile.size,\n        file: targetFile\n      });\n    };\n    reader.readAsDataURL(targetFile);\n  });\n}","map":{"version":3,"names":["Platform","getDocumentAsync","_getDocumentAsync","_asyncToGenerator","_ref","_ref$type","type","_ref$multiple","multiple","_ref$base","base64","isDOMAvailable","canceled","assets","input","document","createElement","style","display","setAttribute","Array","isArray","join","String","Math","random","body","appendChild","Promise","resolve","reject","addEventListener","files","results","i","length","push","readFileAsync","all","output","e","removeChild","event","MouseEvent","dispatchEvent","_x","apply","arguments","targetFile","undefined","mimeType","uri","webkitRelativePath","name","lastModified","size","file","reader","FileReader","onerror","Error","onload","_ref3","target","result","readAsDataURL"],"sources":["/Users/User/medical-ai-app/mobile/node_modules/expo-document-picker/src/ExpoDocumentPicker.web.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\n\nimport { DocumentPickerAsset, DocumentPickerOptions, DocumentPickerResult } from './types';\n\nexport default {\n  async getDocumentAsync({\n    type = '*/*',\n    multiple = false,\n    base64 = true,\n  }: DocumentPickerOptions): Promise<DocumentPickerResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { canceled: true, assets: null };\n    }\n\n    const input = document.createElement('input');\n    input.style.display = 'none';\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', Array.isArray(type) ? type.join(',') : type);\n    input.setAttribute('id', String(Math.random()));\n    if (multiple) {\n      input.setAttribute('multiple', 'multiple');\n    }\n\n    document.body.appendChild(input);\n\n    return new Promise((resolve, reject) => {\n      input.addEventListener('change', async () => {\n        if (input.files) {\n          const results: Promise<DocumentPickerAsset>[] = [];\n          for (let i = 0; i < input.files.length; i++) {\n            results.push(readFileAsync(input.files[i], base64));\n          }\n          try {\n            const assets = await Promise.all(results);\n            resolve({ canceled: false, assets, output: input.files });\n          } catch (e) {\n            reject(e);\n          }\n        } else {\n          resolve({ canceled: true, assets: null });\n        }\n\n        document.body.removeChild(input);\n      });\n\n      input.addEventListener('cancel', () => {\n        resolve({ canceled: true, assets: null });\n      });\n\n      const event = new MouseEvent('click');\n      input.dispatchEvent(event);\n    });\n  },\n};\n\nfunction readFileAsync(targetFile: File, base64: boolean = true): Promise<DocumentPickerAsset> {\n  return new Promise((resolve, reject) => {\n    const mimeType = targetFile.type;\n    if (!base64) {\n      resolve({\n        uri: targetFile.webkitRelativePath,\n        mimeType,\n        name: targetFile.name,\n        lastModified: targetFile.lastModified,\n        size: targetFile.size,\n        file: targetFile,\n      });\n      return;\n    }\n    const reader = new FileReader();\n    reader.onerror = () => {\n      reject(new Error(`Failed to read the selected media because the operation failed.`));\n    };\n    reader.onload = ({ target }) => {\n      const uri = (target as any).result;\n      resolve({\n        uri,\n        mimeType,\n        name: targetFile.name,\n        lastModified: targetFile.lastModified,\n        size: targetFile.size,\n        file: targetFile,\n      });\n    };\n\n    // Read in the image file as a binary string.\n    reader.readAsDataURL(targetFile);\n  });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}