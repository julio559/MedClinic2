{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport RegisterScreen from \"./src/screens/RegisterScreen\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport PatientsScreen from \"./src/screens/PatientsScreen\";\nimport NewAnalysisScreen from \"./src/screens/NewAnalysisScreen\";\nimport ProfileScreen from \"./src/screens/ProfileScreen\";\nimport { AuthProvider, useAuth } from \"./src/context/AuthContext\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar TabNavigator = function TabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') iconName = 'home';else if (route.name === 'Patients') iconName = 'people';else if (route.name === 'Analysis') iconName = 'analytics';else if (route.name === 'Profile') iconName = 'person';\n          return _jsx(Icon, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: '#1E3A8A',\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        title: 'Início'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Patients\",\n      component: PatientsScreen,\n      options: {\n        title: 'Pacientes'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Analysis\",\n      component: NewAnalysisScreen,\n      options: {\n        title: 'Nova Análise'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        title: 'Perfil'\n      }\n    })]\n  });\n};\nvar AppNavigator = function AppNavigator() {\n  var _useAuth = useAuth(),\n    user = _useAuth.user,\n    loading = _useAuth.loading;\n  if (loading) return null;\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: user ? _jsx(Stack.Screen, {\n        name: \"Main\",\n        component: TabNavigator\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen\n        })]\n      })\n    })\n  });\n};\nexport default function App() {\n  return _jsx(AuthProvider, {\n    children: _jsx(AppNavigator, {})\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","createBottomTabNavigator","Icon","LoginScreen","RegisterScreen","HomeScreen","PatientsScreen","NewAnalysisScreen","ProfileScreen","AuthProvider","useAuth","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","Tab","TabNavigator","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","children","Screen","component","options","title","AppNavigator","_useAuth","user","loading","App"],"sources":["/Users/User/medical-ai-app/mobile/App.js"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\n\nimport LoginScreen from './src/screens/LoginScreen';\nimport RegisterScreen from './src/screens/RegisterScreen';\nimport HomeScreen from './src/screens/HomeScreen';\nimport PatientsScreen from './src/screens/PatientsScreen';\nimport NewAnalysisScreen from './src/screens/NewAnalysisScreen';\nimport ProfileScreen from './src/screens/ProfileScreen';\n\nimport { AuthProvider, useAuth } from './src/context/AuthContext';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nconst TabNavigator = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n          \n          if (route.name === 'Home') iconName = 'home';\n          else if (route.name === 'Patients') iconName = 'people';\n          else if (route.name === 'Analysis') iconName = 'analytics';\n          else if (route.name === 'Profile') iconName = 'person';\n          \n          return <Icon name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: '#1E3A8A',\n        tabBarInactiveTintColor: 'gray',\n        headerShown: false,\n      })}\n    >\n      <Tab.Screen name=\"Home\" component={HomeScreen} options={{ title: 'Início' }} />\n      <Tab.Screen name=\"Patients\" component={PatientsScreen} options={{ title: 'Pacientes' }} />\n      <Tab.Screen name=\"Analysis\" component={NewAnalysisScreen} options={{ title: 'Nova Análise' }} />\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} options={{ title: 'Perfil' }} />\n    </Tab.Navigator>\n  );\n};\n\nconst AppNavigator = () => {\n  const { user, loading } = useAuth();\n  \n  if (loading) return null;\n  \n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\n        {user ? (\n          <Stack.Screen name=\"Main\" component={TabNavigator} />\n        ) : (\n          <>\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\n            <Stack.Screen name=\"Register\" component={RegisterScreen} />\n          </>\n        )}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default function App() {\n  return (\n    <AuthProvider>\n      <AppNavigator />\n    </AuthProvider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}